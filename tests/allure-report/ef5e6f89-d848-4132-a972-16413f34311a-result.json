{"name": "test_overview[edge]", "status": "broken", "statusDetails": {"message": "TypeError: a bytes-like object is required, not 'NoneType'", "trace": "self = <tests.saucedemoE2E.TestSauceDemo object at 0x000002245A97F990>\n\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_overview(self):\n        items_price = self.driver.find_elements(By.XPATH, \"//div[@class= 'inventory_item_price']\")\n        total_price = 0\n        for price in items_price:\n            format_price = price.text.split('$')[1]\n            total_price += float(format_price)\n        print(total_price)\n        total_price_on_screen = float(\n            self.driver.find_element(By.XPATH, \"//div[@class= 'summary_subtotal_label']\").text.split('$')[1])\n        print(total_price_on_screen)\n        assert total_price == total_price_on_screen\n        tax_amount = float(self.driver.find_element(By.XPATH, \"//div[@class= 'summary_tax_label']\").text.split('$')[1])\n        total_price_to_paid = total_price + tax_amount\n        total_price_to_paid_on_screen = float(\n            self.driver.find_element(By.XPATH, \"//div[@class= 'summary_info_label summary_total_label']\").text.split(\n                '$')[1])\n        assert total_price_to_paid == total_price_to_paid_on_screen\n        self.get_logger().info(f\"Total price: {total_price_to_paid}\")\n        self.driver.find_element(By.ID, \"finish\").click()\n        thank_you = self.driver.find_element(By.XPATH, \"//h2[@class = 'complete-header']\")\n        assert thank_you.is_displayed()\n        allure.attach(self.driver.get_screenshot_as_png(),\n                      name=\"thank you\", attachment_type=AttachmentType.PNG)\n>       allure.attach(self.get_logger().info(\"Purchased Successful!\"))\n\nsaucedemoE2E.py:107: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nC:\\Users\\kseth\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\allure_commons\\_allure.py:200: in __call__\n    plugin_manager.hook.attach_data(body=body, name=name, attachment_type=attachment_type, extension=extension)\nC:\\Users\\kseth\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\pluggy\\_hooks.py:265: in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\nC:\\Users\\kseth\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\pluggy\\_manager.py:80: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\nC:\\Users\\kseth\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\allure_pytest\\listener.py:249: in attach_data\n    self.allure_logger.attach_data(uuid4(), body, name=name, attachment_type=attachment_type, extension=extension)\nC:\\Users\\kseth\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\allure_commons\\reporter.py:165: in attach_data\n    plugin_manager.hook.report_attached_data(body=body, file_name=file_name)\nC:\\Users\\kseth\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\pluggy\\_hooks.py:265: in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\nC:\\Users\\kseth\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\pluggy\\_manager.py:80: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <allure_commons.logger.AllureFileLogger object at 0x000002245A93EB50>, body = None, file_name = '28522555-872a-4832-baae-38026dfc06dc-attachment.attach'\n\n    @hookimpl\n    def report_attached_data(self, body, file_name):\n        destination = self._report_dir / file_name\n        with open(destination, 'wb') as attached_file:\n            if isinstance(body, str):\n                attached_file.write(body.encode('utf-8'))\n            else:\n>               attached_file.write(body)\nE               TypeError: a bytes-like object is required, not 'NoneType'\n\nC:\\Users\\kseth\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\allure_commons\\logger.py:53: TypeError"}, "attachments": [{"name": "thank you", "source": "1068396a-0f31-4317-a713-de57cba79862-attachment.png", "type": "image/png"}, {"source": "28522555-872a-4832-baae-38026dfc06dc-attachment.attach"}, {"name": "log", "source": "b9ee39a9-0dd6-4ca9-a425-2046af692b68-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "7e353d00-9921-42f7-b5ac-7f37bbf5672a-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "browser_setup", "value": "'edge'"}], "start": 1709577506635, "stop": 1709577507044, "uuid": "e04c1483-925e-4c6d-bbfa-729bad172080", "historyId": "fb81350ab1129c6652ef6596f88602f8", "testCaseId": "e2c634223a728e181da197b81c1b9369", "fullName": "saucedemoE2E.TestSauceDemo#test_overview", "labels": [{"name": "severity", "value": "critical"}, {"name": "tag", "value": "@pytest.mark.usefixtures('browser_setup')"}, {"name": "suite", "value": "saucedemoE2E"}, {"name": "subSuite", "value": "TestSauceDemo"}, {"name": "host", "value": "DESKTOP-T144R5P"}, {"name": "thread", "value": "9056-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "saucedemoE2E"}]}